# This is a basic workflow  to help you start building your flutter app and release it on GitHub on certain events.

name: CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: 'gradle'
          
      - uses: subosito/flutter-action@v2
        with:
          # Adjust to the flutter version you are working with
          flutter-version: "3.0.0"
          channel: 'stable'
          cache: true

      # Runs a single command using the runners shell
      - name: Get dependencies
        run: flutter pub get

      # Runs a set of commands using the runners shell
      - name: Start Android Release Build
        run: flutter build apk --release --split-per-abi && flutter build appbundle

      - name: Upload Android Release
        uses: actions/upload-artifact@v2
        with:
          name: android-release
          path: |
            ./build/app/outputs/apk/release/*.apk
            ./build/app/outputs/bundle/release/app-release.aab
      
      - name: Start Web Release Build
        run: flutter build web --release

      - name: Upload Web Build Files
        uses: actions/upload-artifact@v2
        with:
          name: web-release
          path: ./build/web

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download Android Release
      uses: actions/download-artifact@v2
      with:
        name: android-release

    - name: Deploy on GitHub
      uses: ncipollo/release-action@v1
      with:
        artifacts: android-release
          # Get token to create release from secret (Token needs permission to do so)
        token: ${{ secrets.GH_TOKEN }}

    - name: Download Web Release
      uses: actions/download-artifact@v2
      with:
        name: web-release
    
    - name: Deploy to gh-pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
